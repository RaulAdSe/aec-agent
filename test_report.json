[
  {
    "success": false,
    "description": "Import src.rag.vectorstore_manager.VectorstoreManager"
  },
  {
    "success": false,
    "description": "Import src.rag.document_loader.DocumentLoader"
  },
  {
    "success": false,
    "description": "Import src.rag.embeddings_config.get_embeddings"
  },
  {
    "success": false,
    "description": "Import src.rag.qa_chain.create_qa_chain"
  },
  {
    "success": false,
    "description": "RAG Functionality Test"
  },
  {
    "success": false,
    "description": "Component Integration Test"
  },
  {
    "success": false,
    "returncode": 1,
    "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.1, pytest-8.4.1, pluggy-1.6.0 -- /Library/Frameworks/Python.framework/Versions/3.13/bin/python3\ncachedir: .pytest_cache\nrootdir: /Users/rauladell/Work/Servitec/aec-compliance-agent\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, mock-3.14.1, langsmith-0.4.13, cov-7.0.0\ncollecting ... collected 13 items\n\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_init FAILED [  7%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_create_from_pdfs_success FAILED [ 15%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_create_from_pdfs_no_documents FAILED [ 23%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_load_existing_success FAILED [ 30%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_load_existing_not_found FAILED [ 38%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_get_retriever_no_vectorstore FAILED [ 46%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_get_retriever_success FAILED [ 53%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_query_simple_no_vectorstore FAILED [ 61%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_query_simple_success FAILED [ 69%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_save_vectorstore_no_vectorstore FAILED [ 76%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_save_vectorstore_success FAILED [ 84%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_is_loaded_false FAILED [ 92%]\ntests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_is_loaded_true FAILED [100%]\n\n=================================== FAILURES ===================================\n_______________________ TestVectorstoreManager.test_init _______________________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x143060410>\n\n    def test_init(self):\n        \"\"\"Test VectorstoreManager initialization.\"\"\"\n>       assert self.manager.vectorstore_path == self.vectorstore_path\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AttributeError: 'VectorstoreManager' object has no attribute 'vectorstore_path'. Did you mean: 'vectorstore'?\n\ntests/unit/rag/test_vectorstore_manager.py:31: AttributeError\n_____________ TestVectorstoreManager.test_create_from_pdfs_success _____________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x1430607d0>\nmock_chroma = <MagicMock name='Chroma' id='6243619504'>\n\n    @patch('src.rag.vectorstore_manager.Chroma')\n    def test_create_from_pdfs_success(self, mock_chroma):\n        \"\"\"Test successful vectorstore creation from PDFs.\"\"\"\n        # Mock Chroma and its methods\n        mock_vectorstore = Mock()\n        mock_chroma.from_documents.return_value = mock_vectorstore\n    \n        # Mock document loader\n>       with patch('src.rag.vectorstore_manager.DocumentLoader') as mock_loader_class:\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/rag/test_vectorstore_manager.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x1742f1a90>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'src.rag.vectorstore_manager' from '/Users/rauladell/Work/Servitec/aec-compliance-agent/src/rag/vectorstore_manager.py'> does not have the attribute 'DocumentLoader'\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: AttributeError\n__________ TestVectorstoreManager.test_create_from_pdfs_no_documents ___________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x143035940>\nmock_chroma = <MagicMock name='Chroma' id='6243621856'>\n\n    @patch('src.rag.vectorstore_manager.Chroma')\n    def test_create_from_pdfs_no_documents(self, mock_chroma):\n        \"\"\"Test vectorstore creation when no documents are found.\"\"\"\n>       with patch('src.rag.vectorstore_manager.DocumentLoader') as mock_loader_class:\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/rag/test_vectorstore_manager.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x17d50e510>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'src.rag.vectorstore_manager' from '/Users/rauladell/Work/Servitec/aec-compliance-agent/src/rag/vectorstore_manager.py'> does not have the attribute 'DocumentLoader'\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: AttributeError\n______________ TestVectorstoreManager.test_load_existing_success _______________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x143035ba0>\nmock_chroma = <MagicMock name='Chroma' id='6243622528'>\n\n    @patch('src.rag.vectorstore_manager.Chroma')\n    def test_load_existing_success(self, mock_chroma):\n        \"\"\"Test loading existing vectorstore.\"\"\"\n        # Mock Chroma persistence\n        mock_vectorstore = Mock()\n        mock_chroma.return_value = mock_vectorstore\n    \n        # Create a fake vectorstore directory\n        self.vectorstore_path.mkdir(parents=True, exist_ok=True)\n        (self.vectorstore_path / \"chroma.sqlite3\").touch()\n    \n        result = self.manager.load_existing()\n    \n>       assert result is True\nE       assert None is True\n\ntests/unit/rag/test_vectorstore_manager.py:87: AssertionError\n----------------------------- Captured stdout call -----------------------------\nLoading vectorstore from: /var/folders/q1/4yt1m4ds3pjfdvmww9sgpyrc0000gn/T/tmpe_ecb8hw/test_vectorstore\n\u2705 Vectorstore loaded\n_____________ TestVectorstoreManager.test_load_existing_not_found ______________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x14268deb0>\n\n    def test_load_existing_not_found(self):\n        \"\"\"Test loading non-existent vectorstore.\"\"\"\n>       result = self.manager.load_existing()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/rag/test_vectorstore_manager.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.rag.vectorstore_manager.VectorstoreManager object at 0x17d4e4f50>\n\n    def load_existing(self):\n        \"\"\"Load existing vectorstore.\"\"\"\n        if not self.persist_directory.exists():\n>           raise ValueError(f\"Vectorstore not found: {self.persist_directory}\")\nE           ValueError: Vectorstore not found: /var/folders/q1/4yt1m4ds3pjfdvmww9sgpyrc0000gn/T/tmpi05iy4oj/test_vectorstore\n\nsrc/rag/vectorstore_manager.py:83: ValueError\n___________ TestVectorstoreManager.test_get_retriever_no_vectorstore ___________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x143040e20>\n\n    def test_get_retriever_no_vectorstore(self):\n        \"\"\"Test getting retriever when no vectorstore is loaded.\"\"\"\n>       retriever = self.manager.get_retriever()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/rag/test_vectorstore_manager.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.rag.vectorstore_manager.VectorstoreManager object at 0x1741b9590>\nk = 3\n\n    def get_retriever(self, k: int = 3):\n        \"\"\"\n        Get retriever for searches.\n    \n        Args:\n            k: Number of documents to retrieve\n        \"\"\"\n        if not self.vectorstore:\n>           raise ValueError(\"Vectorstore not initialized\")\nE           ValueError: Vectorstore not initialized\n\nsrc/rag/vectorstore_manager.py:100: ValueError\n______________ TestVectorstoreManager.test_get_retriever_success _______________\n\nself = <Mock name='mock.as_retriever' id='6243619840'>, args = ()\nkwargs = {'search_kwargs': {'k': 5}}, expected = call(search_kwargs={'k': 5})\nactual = call(search_type='similarity', search_kwargs={'k': 5})\n_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x174157f60>\ncause = None\n\n    def assert_called_with(self, /, *args, **kwargs):\n        \"\"\"assert that the last call was made with the specified arguments.\n    \n        Raises an AssertionError if the args and keyword args passed in are\n        different to the last call to the mock.\"\"\"\n        if self.call_args is None:\n            expected = self._format_mock_call_signature(args, kwargs)\n            actual = 'not called.'\n            error_message = ('expected call not found.\\nExpected: %s\\n  Actual: %s'\n                    % (expected, actual))\n            raise AssertionError(error_message)\n    \n        def _error_message():\n            msg = self._format_mock_failure_message(args, kwargs)\n            return msg\n        expected = self._call_matcher(_Call((args, kwargs), two=True))\n        actual = self._call_matcher(self.call_args)\n        if actual != expected:\n            cause = expected if isinstance(expected, Exception) else None\n>           raise AssertionError(_error_message()) from cause\nE           AssertionError: expected call not found.\nE           Expected: as_retriever(search_kwargs={'k': 5})\nE             Actual: as_retriever(search_type='similarity', search_kwargs={'k': 5})\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:977: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Mock name='mock.as_retriever' id='6243619840'>, args = ()\nkwargs = {'search_kwargs': {'k': 5}}\n\n    def assert_called_once_with(self, /, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.%s\"\n                   % (self._mock_name or 'mock',\n                      self.call_count,\n                      self._calls_repr()))\n            raise AssertionError(msg)\n>       return self.assert_called_with(*args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError: expected call not found.\nE       Expected: as_retriever(search_kwargs={'k': 5})\nE         Actual: as_retriever(search_type='similarity', search_kwargs={'k': 5})\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'search_type': 'similarity', 'search_kwargs': {'k': 5}} == {'search_kwargs': {'k': 5}}\nE         \nE         Common items:\nE         {'search_kwargs': {'k': 5}}\nE         Left contains 1 more item:\nE         {'search_type': 'similarity'}\nE         \nE         Full diff:\nE           {\nE               'search_kwargs': {\nE                   'k': 5,\nE               },\nE         +     'search_type': 'similarity',\nE           }\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:989: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x143041040>\n\n    def test_get_retriever_success(self):\n        \"\"\"Test getting retriever from loaded vectorstore.\"\"\"\n        # Mock vectorstore\n        mock_vectorstore = Mock()\n        mock_retriever = Mock()\n        mock_vectorstore.as_retriever.return_value = mock_retriever\n        self.manager.vectorstore = mock_vectorstore\n    \n        retriever = self.manager.get_retriever(k=5)\n    \n        assert retriever == mock_retriever\n>       mock_vectorstore.as_retriever.assert_called_once_with(search_kwargs={\"k\": 5})\nE       AssertionError: expected call not found.\nE       Expected: as_retriever(search_kwargs={'k': 5})\nE         Actual: as_retriever(search_type='similarity', search_kwargs={'k': 5})\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'search_type': 'similarity', 'search_kwargs': {'k': 5}} == {'search_kwargs': {'k': 5}}\nE         \nE         Common items:\nE         {'search_kwargs': {'k': 5}}\nE         Left contains 1 more item:\nE         {'search_type': 'similarity'}\nE         \nE         Full diff:\nE           {\nE               'search_kwargs': {\nE                   'k': 5,\nE               },\nE         +     'search_type': 'similarity',\nE           }\n\ntests/unit/rag/test_vectorstore_manager.py:118: AssertionError\n___________ TestVectorstoreManager.test_query_simple_no_vectorstore ____________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x1426ff450>\n\n    def test_query_simple_no_vectorstore(self):\n        \"\"\"Test simple query when no vectorstore is loaded.\"\"\"\n>       docs = self.manager.query_simple(\"test query\")\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/unit/rag/test_vectorstore_manager.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.rag.vectorstore_manager.VectorstoreManager object at 0x17d4e5950>\nquestion = 'test query', k = 3\n\n    def query_simple(self, question: str, k: int = 3):\n        \"\"\"\n        Simple query without LLM (just retrieval).\n    \n        Args:\n            question: Query string\n            k: Number of results\n    \n        Returns:\n            List of relevant documents\n        \"\"\"\n        if not self.vectorstore:\n>           raise ValueError(\"Vectorstore not initialized\")\nE           ValueError: Vectorstore not initialized\n\nsrc/rag/vectorstore_manager.py:119: ValueError\n_______________ TestVectorstoreManager.test_query_simple_success _______________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x1426ff650>\n\n    def test_query_simple_success(self):\n        \"\"\"Test successful simple query.\"\"\"\n        # Mock vectorstore and retriever\n        mock_vectorstore = Mock()\n        mock_retriever = Mock()\n        mock_docs = [Mock(), Mock()]\n        mock_retriever.get_relevant_documents.return_value = mock_docs\n        mock_vectorstore.as_retriever.return_value = mock_retriever\n        self.manager.vectorstore = mock_vectorstore\n    \n        docs = self.manager.query_simple(\"test query\", k=3)\n    \n>       assert docs == mock_docs\nE       AssertionError: assert <Mock name='mock.similarity_search()' id='6243624544'> == [<Mock id='6243623872'>, <Mock id='6243622192'>]\n\ntests/unit/rag/test_vectorstore_manager.py:138: AssertionError\n_________ TestVectorstoreManager.test_save_vectorstore_no_vectorstore __________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x14245d7c0>\n\n    def test_save_vectorstore_no_vectorstore(self):\n        \"\"\"Test saving when no vectorstore is loaded.\"\"\"\n>       result = self.manager.save_vectorstore()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AttributeError: 'VectorstoreManager' object has no attribute 'save_vectorstore'. Did you mean: 'vectorstore'?\n\ntests/unit/rag/test_vectorstore_manager.py:144: AttributeError\n_____________ TestVectorstoreManager.test_save_vectorstore_success _____________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x14245f2f0>\nmock_chroma = <MagicMock name='Chroma' id='6243624880'>\n\n    @patch('src.rag.vectorstore_manager.Chroma')\n    def test_save_vectorstore_success(self, mock_chroma):\n        \"\"\"Test successful vectorstore saving.\"\"\"\n        # Mock vectorstore\n        mock_vectorstore = Mock()\n        self.manager.vectorstore = mock_vectorstore\n    \n>       result = self.manager.save_vectorstore()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AttributeError: 'VectorstoreManager' object has no attribute 'save_vectorstore'. Did you mean: 'vectorstore'?\n\ntests/unit/rag/test_vectorstore_manager.py:155: AttributeError\n_________________ TestVectorstoreManager.test_is_loaded_false __________________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x1430718d0>\n\n    def test_is_loaded_false(self):\n        \"\"\"Test is_loaded when no vectorstore is loaded.\"\"\"\n>       assert self.manager.is_loaded() is False\n               ^^^^^^^^^^^^^^^^^^^^^^\nE       AttributeError: 'VectorstoreManager' object has no attribute 'is_loaded'\n\ntests/unit/rag/test_vectorstore_manager.py:162: AttributeError\n__________________ TestVectorstoreManager.test_is_loaded_true __________________\n\nself = <tests.unit.rag.test_vectorstore_manager.TestVectorstoreManager object at 0x143071d30>\n\n    def test_is_loaded_true(self):\n        \"\"\"Test is_loaded when vectorstore is loaded.\"\"\"\n        self.manager.vectorstore = Mock()\n>       assert self.manager.is_loaded() is True\n               ^^^^^^^^^^^^^^^^^^^^^^\nE       AttributeError: 'VectorstoreManager' object has no attribute 'is_loaded'\n\ntests/unit/rag/test_vectorstore_manager.py:167: AttributeError\n================================ tests coverage ================================\n_______________ coverage: platform darwin, python 3.13.1-final-0 _______________\n\nName                              Stmts   Miss  Cover   Missing\n---------------------------------------------------------------\nsrc/__init__.py                       0      0   100%\nsrc/agent/__init__.py                 0      0   100%\nsrc/agent/graph.py                  114    114     0%   8-405\nsrc/agent/prompts.py                 12     12     0%   9-209\nsrc/agent/state.py                   55     55     0%   8-213\nsrc/agent/tools.py                  120    120     0%   8-400\nsrc/calculations/__init__.py          0      0   100%\nsrc/calculations/geometry.py        108    108     0%   8-392\nsrc/calculations/graph.py           147    147     0%   8-421\nsrc/extraction/__init__.py            0      0   100%\nsrc/extraction/dwg_extractor.py     240    240     0%   8-554\nsrc/rag/__init__.py                   0      0   100%\nsrc/rag/document_loader.py           19     14    26%   23-39\nsrc/rag/embeddings_config.py          3      0   100%\nsrc/rag/qa_chain.py                   9      9     0%   7-62\nsrc/rag/vectorstore_manager.py       54     25    54%   46-78, 134-152\nsrc/schemas.py                      163    163     0%   8-235\nsrc/utils/__init__.py                 0      0   100%\n---------------------------------------------------------------\nTOTAL                              1044   1007     4%\nCoverage HTML written to dir htmlcov\n=========================== short test summary info ============================\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_init - AttributeError: 'VectorstoreManager' object has no attribute 'vectorstore_path'. Did you mean: 'vectorstore'?\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_create_from_pdfs_success - AttributeError: <module 'src.rag.vectorstore_manager' from '/Users/rauladell/Work/Servitec/aec-compliance-agent/src/rag/vectorstore_manager.py'> does not have the attribute 'DocumentLoader'\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_create_from_pdfs_no_documents - AttributeError: <module 'src.rag.vectorstore_manager' from '/Users/rauladell/Work/Servitec/aec-compliance-agent/src/rag/vectorstore_manager.py'> does not have the attribute 'DocumentLoader'\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_load_existing_success - assert None is True\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_load_existing_not_found - ValueError: Vectorstore not found: /var/folders/q1/4yt1m4ds3pjfdvmww9sgpyrc0000gn/T/tmpi05iy4oj/test_vectorstore\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_get_retriever_no_vectorstore - ValueError: Vectorstore not initialized\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_get_retriever_success - AssertionError: expected call not found.\nExpected: as_retriever(search_kwargs={'k': 5})\n  Actual: as_retriever(search_type='similarity', search_kwargs={'k': 5})\n\npytest introspection follows:\n\nKwargs:\nassert {'search_type': 'similarity', 'search_kwargs': {'k': 5}} == {'search_kwargs': {'k': 5}}\n  \n  Common items:\n  {'search_kwargs': {'k': 5}}\n  Left contains 1 more item:\n  {'search_type': 'similarity'}\n  \n  Full diff:\n    {\n        'search_kwargs': {\n            'k': 5,\n        },\n  +     'search_type': 'similarity',\n    }\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_query_simple_no_vectorstore - ValueError: Vectorstore not initialized\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_query_simple_success - AssertionError: assert <Mock name='mock.similarity_search()' id='6243624544'> == [<Mock id='6243623872'>, <Mock id='6243622192'>]\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_save_vectorstore_no_vectorstore - AttributeError: 'VectorstoreManager' object has no attribute 'save_vectorstore'. Did you mean: 'vectorstore'?\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_save_vectorstore_success - AttributeError: 'VectorstoreManager' object has no attribute 'save_vectorstore'. Did you mean: 'vectorstore'?\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_is_loaded_false - AttributeError: 'VectorstoreManager' object has no attribute 'is_loaded'\nFAILED tests/unit/rag/test_vectorstore_manager.py::TestVectorstoreManager::test_is_loaded_true - AttributeError: 'VectorstoreManager' object has no attribute 'is_loaded'\n============================= 13 failed in 35.09s ==============================\n",
    "stderr": "",
    "duration": 36.78385782241821,
    "description": "Running tests/unit/rag/test_vectorstore_manager.py"
  },
  {
    "success": false,
    "returncode": 2,
    "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.1, pytest-8.4.1, pluggy-1.6.0 -- /Library/Frameworks/Python.framework/Versions/3.13/bin/python3\ncachedir: .pytest_cache\nrootdir: /Users/rauladell/Work/Servitec/aec-compliance-agent\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, mock-3.14.1, langsmith-0.4.13, cov-7.0.0\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting tests/unit/rag/test_document_loader.py ____________\nImportError while importing test module '/Users/rauladell/Work/Servitec/aec-compliance-agent/tests/unit/rag/test_document_loader.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/unit/rag/test_document_loader.py:11: in <module>\n    from src.rag.document_loader import DocumentLoader\nE   ImportError: cannot import name 'DocumentLoader' from 'src.rag.document_loader' (/Users/rauladell/Work/Servitec/aec-compliance-agent/src/rag/document_loader.py)\n=========================== short test summary info ============================\nERROR tests/unit/rag/test_document_loader.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 1.60s ===============================\n",
    "stderr": "",
    "duration": 2.3496899604797363,
    "description": "Running tests/unit/rag/test_document_loader.py"
  },
  {
    "success": false,
    "returncode": 2,
    "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.1, pytest-8.4.1, pluggy-1.6.0 -- /Library/Frameworks/Python.framework/Versions/3.13/bin/python3\ncachedir: .pytest_cache\nrootdir: /Users/rauladell/Work/Servitec/aec-compliance-agent\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, mock-3.14.1, langsmith-0.4.13, cov-7.0.0\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n__________ ERROR collecting tests/unit/rag/test_embeddings_config.py ___________\nImportError while importing test module '/Users/rauladell/Work/Servitec/aec-compliance-agent/tests/unit/rag/test_embeddings_config.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/unit/rag/test_embeddings_config.py:8: in <module>\n    from src.rag.embeddings_config import get_embeddings, get_embeddings_model_name\nE   ImportError: cannot import name 'get_embeddings_model_name' from 'src.rag.embeddings_config' (/Users/rauladell/Work/Servitec/aec-compliance-agent/src/rag/embeddings_config.py)\n=========================== short test summary info ============================\nERROR tests/unit/rag/test_embeddings_config.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 1.27s ===============================\n",
    "stderr": "",
    "duration": 1.9136879444122314,
    "description": "Running tests/unit/rag/test_embeddings_config.py"
  },
  {
    "success": false,
    "returncode": 2,
    "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.1, pytest-8.4.1, pluggy-1.6.0 -- /Library/Frameworks/Python.framework/Versions/3.13/bin/python3\ncachedir: .pytest_cache\nrootdir: /Users/rauladell/Work/Servitec/aec-compliance-agent\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, mock-3.14.1, langsmith-0.4.13, cov-7.0.0\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n_______________ ERROR collecting tests/unit/rag/test_qa_chain.py _______________\nImportError while importing test module '/Users/rauladell/Work/Servitec/aec-compliance-agent/tests/unit/rag/test_qa_chain.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/unit/rag/test_qa_chain.py:8: in <module>\n    from src.rag.qa_chain import create_qa_chain, create_llm\nsrc/rag/qa_chain.py:7: in <module>\n    from langchain_google_genai import ChatGoogleGenerativeAI\nE   ModuleNotFoundError: No module named 'langchain_google_genai'\n=========================== short test summary info ============================\nERROR tests/unit/rag/test_qa_chain.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.12s ===============================\n",
    "stderr": "",
    "duration": 0.44878697395324707,
    "description": "Running tests/unit/rag/test_qa_chain.py"
  }
]